<br>
<div class="container-fluid">
  <div class="row">

    <div class="col-sm-3">
      <div id="r-result"></div>
    </div>

    <div class="col-sm-9">
      <div class="well">
        <div class="row">
          <button class="btn btn-primary btn-xs" style="margin-left: 60px" onclick="getData()"> 获取数据</button>
          <button class="btn btn-warning btn-xs" onclick="getMarket()"> 数据转换</button>
          <button class="btn btn-danger btn-xs" onclick="draw()"> 聚类图</button>
          <button class="btn btn-success btn-xs" onclick="searchLocal(bus_info, '公交站')"> 搜索公交车站</button>
          <button class="btn btn-success btn-xs" onclick="searchLocal(shopping_info,'商场')"> 搜索商场</button>
          <button class="btn btn-success btn-xs" onclick="searchLocal(supermaket_info,'超市')"> 搜索超市</button>
          <button class="btn btn-success btn-xs" onclick="searchLocal(subway_info, '地铁')"> 搜索地铁</button>
          <button class="btn btn-success btn-xs" onclick="searchLocal(school_info, '学校')"> 搜索学校</button>
          <button class="btn btn-success btn-xs" onclick="searchLocal(hospital_info, '医院')"> 搜索医院</button>
        </div>

      </div>

      <div id="l-map" style="height: 500px;width: 100%">

      </div>


    </div>

  </div>
</div>

<div id="bus">
  <%= form_for :courses do |f| %>
      <%#= f.hidden_field, %>
  <% end %>
</div>

<script type="text/javascript">

  var map = new BMap.Map("l-map");
  map.centerAndZoom(new BMap.Point(116.404, 39.915), 12);
  map.enableScrollWheelZoom(true);
  var myGeo = new BMap.Geocoder();
  var adds = [];
  //  var markers =[] ;
//  var house_location;
  var bus_info = [];
  var subway_info = [];
  var hospital_info = [];
  var school_info = [];
  var shopping_info = [];
  var supermaket_info=[];

  function getMarket() {
    $.each(adds, function (index, element) {
      myGeo.getPoint(element, function (point) {
        if (point) {
          var address = new BMap.Point(point.lng, point.lat);
          addMarker(address, new BMap.Label(index + ":" + element, {offset: new BMap.Size(20, -10)}));
//          markers.push(new BMap.Marker(address));
          house_location = address;
        }
      }, "北京市");
    });
  }

  //  $('form').submit(function () {
  //    var valuesToSubmit = $(this).serialize();
  //    $.ajax({
  //      type: "POST",
  //      url: $(this).attr('action'), //sumbits it to the given url of the form
  //      data: valuesToSubmit,
  //      dataType: "JSON"
  //    }).success(function (json) {
  //      console.log("success", json);
  //    });
  //    return false;
  //  });

  function searchLocal(array, keyword) {
    map.centerAndZoom(house_location, 15);
    map.clearOverlays();
    array=[];
    var circle = new BMap.Circle(house_location, 2000, {
      fillColor: "blue",
      strokeWeight: 1,
      fillOpacity: 0.1,
      strokeOpacity: 0.3
    });
    map.addOverlay(circle);
    var local = new BMap.LocalSearch(map, {
      renderOptions: {map: map, panel: "r-result", autoViewport: false},
      pageCapacity: 5,
      onSearchComplete: function (results) {
        if (local.getStatus() == BMAP_STATUS_SUCCESS) {
          for (var i = 0; i < results.getCurrentNumPois(); i++) {
            var locate = results.getPoi(i);
            var distance = map.getDistance(locate.point, house_location).toFixed(2);
            var polyline = new BMap.Polyline([locate.point, house_location], {
              strokeColor: "blue",
              strokeWeight: 4,
              strokeOpacity: 0.5
            });
            map.addOverlay(polyline);
            if (locate.tags) {
              array.push("{" + locate.title + ',' + locate.tags + "/" + locate.point.lng + '/' + locate.point.lat + '/' + distance + '}');
            } else {
              array.push("{" + locate.title + "/" + locate.point.lng + '/' + locate.point.lat + '/' + distance + '}');
            }
          }
          document.getElementById("r-result").innerHTML = array.join("<br/>");
        }
      }
    });
    local.searchNearby(keyword, house_location, 2000);
  }


  function draw() {
    var markerClusterer = new BMapLib.MarkerClusterer(map, {markers: markers});
  }

  function addMarker(point, label) {
    var marker = new BMap.Marker(point);
    map.addOverlay(marker);
    marker.setLabel(label);
  }

  function getData() {
    $.ajax({
      type: "GET",
      url: "/ajax",
      dataType: 'json',
      success: function (data) {
        $.each(data, function (index, element) {
          adds.push(element.community);
        });

      },
      error: function () {
        alert('error')
      },
      timeout: function () {
        alert('time out')
      }
    })
  }
</script>

